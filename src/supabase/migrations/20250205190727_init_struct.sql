create sequence "public"."accounttype_id_seq";

create sequence "public"."user_accounttype_id_seq";

create table "public"."account_type" (
    "id" integer not null default nextval('accounttype_id_seq'::regclass),
    "name" character varying(50) not null,
    "description" text,
    "created_at" timestamp with time zone not null default timezone('utc'::text, now()),
    "updated_at" timestamp with time zone not null default timezone('utc'::text, now())
);


alter table "public"."account_type" enable row level security;

create table "public"."form_group" (
    "id" bigint generated by default as identity not null,
    "code" text not null,
    "group_name" text default 'default-group'::text,
    "user_id" uuid not null,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone default '2025-01-09 21:04:09.628478+00'::timestamp with time zone,
    "parent_form_id" uuid,
    "parent_read_only" boolean
);


alter table "public"."form_group" enable row level security;

create table "public"."forms" (
    "id" uuid not null default gen_random_uuid(),
    "user_id" uuid not null,
    "title" text not null,
    "description" text,
    "survey_url" text,
    "sheet_url" text,
    "visible_fields" text[],
    "created_at" timestamp with time zone not null default timezone('utc'::text, now()),
    "updated_at" timestamp with time zone not null default timezone('utc'::text, now()),
    "form_id" numeric not null,
    "form_group_id" bigint,
    "header_field" text,
    "order_id" double precision not null
);


alter table "public"."forms" enable row level security;

create table "public"."submission" (
    "id" bigint generated by default as identity not null,
    "user_id" uuid,
    "created_at" timestamp with time zone not null default now(),
    "submission_id" text,
    "form_id" numeric,
    "parent_submission_id" text
);


alter table "public"."submission" enable row level security;

create table "public"."user_config" (
    "id" integer not null default nextval('user_accounttype_id_seq'::regclass),
    "user_id" uuid not null,
    "account_type_id" integer not null,
    "jotform_key" text,
    "created_at" timestamp with time zone not null default (now() AT TIME ZONE 'utc'::text),
    "updated_at" timestamp with time zone not null default (now() AT TIME ZONE 'utc'::text)
);


alter table "public"."user_config" enable row level security;

create table "public"."user_form_group" (
    "id" bigint generated by default as identity not null,
    "user_id" uuid,
    "created_at" timestamp with time zone default (now() AT TIME ZONE 'utc'::text),
    "updated_at" timestamp with time zone default (now() AT TIME ZONE 'utc'::text),
    "form_group_id" bigint not null
);


alter table "public"."user_form_group" enable row level security;

create table "public"."users" (
    "id" uuid not null,
    "email" text,
    "fullname" text,
    "created_at" timestamp with time zone default (now() AT TIME ZONE 'utc'::text),
    "updated_at" timestamp with time zone default (now() AT TIME ZONE 'utc'::text)
);


alter table "public"."users" enable row level security;

alter sequence "public"."accounttype_id_seq" owned by "public"."account_type"."id";

alter sequence "public"."user_accounttype_id_seq" owned by "public"."user_config"."id";

CREATE UNIQUE INDEX accounttype_name_key ON public.account_type USING btree (name);

CREATE UNIQUE INDEX accounttype_pkey ON public.account_type USING btree (id);

CREATE UNIQUE INDEX form_group_code_key ON public.form_group USING btree (code);

CREATE UNIQUE INDEX form_group_pkey ON public.form_group USING btree (id);

CREATE UNIQUE INDEX submission_pkey ON public.submission USING btree (id);

CREATE UNIQUE INDEX survey_user_pkey ON public.user_form_group USING btree (id);

CREATE UNIQUE INDEX surveys_form_id_key ON public.forms USING btree (form_id);

CREATE UNIQUE INDEX surveys_pkey ON public.forms USING btree (id);

CREATE UNIQUE INDEX user_accounttype_pkey ON public.user_config USING btree (id);

CREATE UNIQUE INDEX users_pkey ON public.users USING btree (id);

alter table "public"."account_type" add constraint "accounttype_pkey" PRIMARY KEY using index "accounttype_pkey";

alter table "public"."form_group" add constraint "form_group_pkey" PRIMARY KEY using index "form_group_pkey";

alter table "public"."forms" add constraint "surveys_pkey" PRIMARY KEY using index "surveys_pkey";

alter table "public"."submission" add constraint "submission_pkey" PRIMARY KEY using index "submission_pkey";

alter table "public"."user_config" add constraint "user_accounttype_pkey" PRIMARY KEY using index "user_accounttype_pkey";

alter table "public"."user_form_group" add constraint "survey_user_pkey" PRIMARY KEY using index "survey_user_pkey";

alter table "public"."users" add constraint "users_pkey" PRIMARY KEY using index "users_pkey";

alter table "public"."account_type" add constraint "accounttype_name_key" UNIQUE using index "accounttype_name_key";

alter table "public"."form_group" add constraint "form_group_code_key" UNIQUE using index "form_group_code_key";

alter table "public"."form_group" add constraint "form_group_parent_form_id_fkey" FOREIGN KEY (parent_form_id) REFERENCES forms(id) not valid;

alter table "public"."form_group" validate constraint "form_group_parent_form_id_fkey";

alter table "public"."form_group" add constraint "form_group_user_id_fkey" FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE not valid;

alter table "public"."form_group" validate constraint "form_group_user_id_fkey";

alter table "public"."forms" add constraint "forms_form_group_id_fkey" FOREIGN KEY (form_group_id) REFERENCES form_group(id) ON DELETE CASCADE not valid;

alter table "public"."forms" validate constraint "forms_form_group_id_fkey";

alter table "public"."forms" add constraint "forms_user_id_fkey" FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE not valid;

alter table "public"."forms" validate constraint "forms_user_id_fkey";

alter table "public"."forms" add constraint "surveys_form_id_key" UNIQUE using index "surveys_form_id_key";

alter table "public"."submission" add constraint "submission_form_id_fkey" FOREIGN KEY (form_id) REFERENCES forms(form_id) ON DELETE CASCADE not valid;

alter table "public"."submission" validate constraint "submission_form_id_fkey";

alter table "public"."submission" add constraint "submission_user_id_fkey" FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE not valid;

alter table "public"."submission" validate constraint "submission_user_id_fkey";

alter table "public"."user_config" add constraint "user_config_account_type_id_fkey" FOREIGN KEY (account_type_id) REFERENCES account_type(id) not valid;

alter table "public"."user_config" validate constraint "user_config_account_type_id_fkey";

alter table "public"."user_config" add constraint "user_config_user_id_fkey" FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE not valid;

alter table "public"."user_config" validate constraint "user_config_user_id_fkey";

alter table "public"."user_form_group" add constraint "form_user_user_id_fkey" FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE not valid;

alter table "public"."user_form_group" validate constraint "form_user_user_id_fkey";

alter table "public"."user_form_group" add constraint "user_form_group_form_group_id_fkey" FOREIGN KEY (form_group_id) REFERENCES form_group(id) ON DELETE CASCADE not valid;

alter table "public"."user_form_group" validate constraint "user_form_group_form_group_id_fkey";

alter table "public"."users" add constraint "users_id_fkey" FOREIGN KEY (id) REFERENCES auth.users(id) ON DELETE CASCADE not valid;

alter table "public"."users" validate constraint "users_id_fkey";

set check_function_bodies = off;

CREATE OR REPLACE FUNCTION public.handle_new_user()
 RETURNS trigger
 LANGUAGE plpgsql
 SECURITY DEFINER
AS $function$
DECLARE
full_name text;

BEGIN
-- Extract the fullname from the user_metadata
full_name := (new.raw_user_meta_data ->> 'full_name');

-- Insert the new user into the USERS table
INSERT INTO public.USERS (id, email, fullname)
VALUES (new.id, new.email, full_name);

RETURN new;
END;
$function$
;

grant delete on table "public"."account_type" to "anon";

grant insert on table "public"."account_type" to "anon";

grant references on table "public"."account_type" to "anon";

grant select on table "public"."account_type" to "anon";

grant trigger on table "public"."account_type" to "anon";

grant truncate on table "public"."account_type" to "anon";

grant update on table "public"."account_type" to "anon";

grant delete on table "public"."account_type" to "authenticated";

grant insert on table "public"."account_type" to "authenticated";

grant references on table "public"."account_type" to "authenticated";

grant select on table "public"."account_type" to "authenticated";

grant trigger on table "public"."account_type" to "authenticated";

grant truncate on table "public"."account_type" to "authenticated";

grant update on table "public"."account_type" to "authenticated";

grant delete on table "public"."account_type" to "service_role";

grant insert on table "public"."account_type" to "service_role";

grant references on table "public"."account_type" to "service_role";

grant select on table "public"."account_type" to "service_role";

grant trigger on table "public"."account_type" to "service_role";

grant truncate on table "public"."account_type" to "service_role";

grant update on table "public"."account_type" to "service_role";

grant delete on table "public"."form_group" to "anon";

grant insert on table "public"."form_group" to "anon";

grant references on table "public"."form_group" to "anon";

grant select on table "public"."form_group" to "anon";

grant trigger on table "public"."form_group" to "anon";

grant truncate on table "public"."form_group" to "anon";

grant update on table "public"."form_group" to "anon";

grant delete on table "public"."form_group" to "authenticated";

grant insert on table "public"."form_group" to "authenticated";

grant references on table "public"."form_group" to "authenticated";

grant select on table "public"."form_group" to "authenticated";

grant trigger on table "public"."form_group" to "authenticated";

grant truncate on table "public"."form_group" to "authenticated";

grant update on table "public"."form_group" to "authenticated";

grant delete on table "public"."form_group" to "service_role";

grant insert on table "public"."form_group" to "service_role";

grant references on table "public"."form_group" to "service_role";

grant select on table "public"."form_group" to "service_role";

grant trigger on table "public"."form_group" to "service_role";

grant truncate on table "public"."form_group" to "service_role";

grant update on table "public"."form_group" to "service_role";

grant delete on table "public"."forms" to "anon";

grant insert on table "public"."forms" to "anon";

grant references on table "public"."forms" to "anon";

grant select on table "public"."forms" to "anon";

grant trigger on table "public"."forms" to "anon";

grant truncate on table "public"."forms" to "anon";

grant update on table "public"."forms" to "anon";

grant delete on table "public"."forms" to "authenticated";

grant insert on table "public"."forms" to "authenticated";

grant references on table "public"."forms" to "authenticated";

grant select on table "public"."forms" to "authenticated";

grant trigger on table "public"."forms" to "authenticated";

grant truncate on table "public"."forms" to "authenticated";

grant update on table "public"."forms" to "authenticated";

grant delete on table "public"."forms" to "service_role";

grant insert on table "public"."forms" to "service_role";

grant references on table "public"."forms" to "service_role";

grant select on table "public"."forms" to "service_role";

grant trigger on table "public"."forms" to "service_role";

grant truncate on table "public"."forms" to "service_role";

grant update on table "public"."forms" to "service_role";

grant delete on table "public"."submission" to "anon";

grant insert on table "public"."submission" to "anon";

grant references on table "public"."submission" to "anon";

grant select on table "public"."submission" to "anon";

grant trigger on table "public"."submission" to "anon";

grant truncate on table "public"."submission" to "anon";

grant update on table "public"."submission" to "anon";

grant delete on table "public"."submission" to "authenticated";

grant insert on table "public"."submission" to "authenticated";

grant references on table "public"."submission" to "authenticated";

grant select on table "public"."submission" to "authenticated";

grant trigger on table "public"."submission" to "authenticated";

grant truncate on table "public"."submission" to "authenticated";

grant update on table "public"."submission" to "authenticated";

grant delete on table "public"."submission" to "service_role";

grant insert on table "public"."submission" to "service_role";

grant references on table "public"."submission" to "service_role";

grant select on table "public"."submission" to "service_role";

grant trigger on table "public"."submission" to "service_role";

grant truncate on table "public"."submission" to "service_role";

grant update on table "public"."submission" to "service_role";

grant delete on table "public"."user_config" to "anon";

grant insert on table "public"."user_config" to "anon";

grant references on table "public"."user_config" to "anon";

grant select on table "public"."user_config" to "anon";

grant trigger on table "public"."user_config" to "anon";

grant truncate on table "public"."user_config" to "anon";

grant update on table "public"."user_config" to "anon";

grant delete on table "public"."user_config" to "authenticated";

grant insert on table "public"."user_config" to "authenticated";

grant references on table "public"."user_config" to "authenticated";

grant select on table "public"."user_config" to "authenticated";

grant trigger on table "public"."user_config" to "authenticated";

grant truncate on table "public"."user_config" to "authenticated";

grant update on table "public"."user_config" to "authenticated";

grant delete on table "public"."user_config" to "service_role";

grant insert on table "public"."user_config" to "service_role";

grant references on table "public"."user_config" to "service_role";

grant select on table "public"."user_config" to "service_role";

grant trigger on table "public"."user_config" to "service_role";

grant truncate on table "public"."user_config" to "service_role";

grant update on table "public"."user_config" to "service_role";

grant delete on table "public"."user_form_group" to "anon";

grant insert on table "public"."user_form_group" to "anon";

grant references on table "public"."user_form_group" to "anon";

grant select on table "public"."user_form_group" to "anon";

grant trigger on table "public"."user_form_group" to "anon";

grant truncate on table "public"."user_form_group" to "anon";

grant update on table "public"."user_form_group" to "anon";

grant delete on table "public"."user_form_group" to "authenticated";

grant insert on table "public"."user_form_group" to "authenticated";

grant references on table "public"."user_form_group" to "authenticated";

grant select on table "public"."user_form_group" to "authenticated";

grant trigger on table "public"."user_form_group" to "authenticated";

grant truncate on table "public"."user_form_group" to "authenticated";

grant update on table "public"."user_form_group" to "authenticated";

grant delete on table "public"."user_form_group" to "service_role";

grant insert on table "public"."user_form_group" to "service_role";

grant references on table "public"."user_form_group" to "service_role";

grant select on table "public"."user_form_group" to "service_role";

grant trigger on table "public"."user_form_group" to "service_role";

grant truncate on table "public"."user_form_group" to "service_role";

grant update on table "public"."user_form_group" to "service_role";

grant delete on table "public"."users" to "anon";

grant insert on table "public"."users" to "anon";

grant references on table "public"."users" to "anon";

grant select on table "public"."users" to "anon";

grant trigger on table "public"."users" to "anon";

grant truncate on table "public"."users" to "anon";

grant update on table "public"."users" to "anon";

grant delete on table "public"."users" to "authenticated";

grant insert on table "public"."users" to "authenticated";

grant references on table "public"."users" to "authenticated";

grant select on table "public"."users" to "authenticated";

grant trigger on table "public"."users" to "authenticated";

grant truncate on table "public"."users" to "authenticated";

grant update on table "public"."users" to "authenticated";

grant delete on table "public"."users" to "service_role";

grant insert on table "public"."users" to "service_role";

grant references on table "public"."users" to "service_role";

grant select on table "public"."users" to "service_role";

grant trigger on table "public"."users" to "service_role";

grant truncate on table "public"."users" to "service_role";

grant update on table "public"."users" to "service_role";

create policy "Service can delete rows"
on "public"."account_type"
as permissive
for delete
to authenticated
using (true);


create policy "Service can select rows"
on "public"."account_type"
as permissive
for select
to authenticated
using (true);


create policy "Service can update rows"
on "public"."account_type"
as permissive
for update
to authenticated
using (true)
with check (true);


create policy "Service can delete rows"
on "public"."forms"
as permissive
for delete
to authenticated
using (true);


create policy "Service can insert rows"
on "public"."forms"
as permissive
for insert
to authenticated
with check (true);


create policy "Service can select rows"
on "public"."forms"
as permissive
for select
to authenticated
using (true);


create policy "Service can update rows"
on "public"."forms"
as permissive
for update
to authenticated
using (true)
with check (true);


create policy "Enable insert for authenticated users only"
on "public"."submission"
as permissive
for insert
to authenticated;


create policy "Enable read access for all users"
on "public"."submission"
as permissive
for select
to public
using (true);


create policy "Service can delete rows"
on "public"."user_config"
as permissive
for delete
to authenticated
using (true);


create policy "Service can insert rows"
on "public"."user_config"
as permissive
for insert
to authenticated
with check (true);


create policy "Service can select rows"
on "public"."user_config"
as permissive
for select
to authenticated
using (true);


create policy "Service can update rows"
on "public"."user_config"
as permissive
for update
to authenticated
using (true)
with check (true);


create policy "Service can delete rows"
on "public"."user_form_group"
as permissive
for delete
to authenticated
using (true);


create policy "Service can insert rows"
on "public"."user_form_group"
as permissive
for insert
to authenticated
with check (true);


create policy "Service can select rows"
on "public"."user_form_group"
as permissive
for select
to authenticated
using (true);


create policy "Service can update rows"
on "public"."user_form_group"
as permissive
for update
to authenticated
using (true)
with check (true);


create policy "Service can delete rows"
on "public"."users"
as permissive
for delete
to authenticated
using (true);


create policy "Service can insert rows"
on "public"."users"
as permissive
for insert
to authenticated
with check (true);


create policy "Service can select rows"
on "public"."users"
as permissive
for select
to authenticated
using (true);


create policy "Service can update rows"
on "public"."users"
as permissive
for update
to authenticated
using (true)
with check (true);



